* { 
    /*we're doing this to remove any decoration from the page's text, e.g the line under links*/
    text-decoration: none;
}

/*<HEADER-MOBILE-FIRST>*/

header {
    background-color: #fff;
    width: 100%;
    height: 120px;
}

header .logo {
    font-family: 'Teko', sans-serif;
    font-size: 44px;
    font-weight: 600;
    color: #111;
    text-transform: uppercase;
    display: block;
    margin: 0 auto;
    text-align: center;
    padding: 20px 0;
}

header nav ul { /*will style the ul that is a container for our list of links*/
    display: block;
    margin: 0 auto; /*if we don't set a display block to the ul the margin will not take affect. (See why!)*/
    /*but the ul content is already taking 100% of width (inherited from header) so technically it is already centered*/
    /*to fix that we can use the value fit-content on the width property*/
    width: fit-content;
}

header nav ul li {/*will style the each item on the ul container*/
    /*make the elements be positioned horizontally next to each other*/
    display: inline-block; 
    /*by making them float to left we'll remove any gaps between them*/
    float: left;
    /*removes the bullet points from the list itens. bullet points are a default style for unordered lists*/
    list-style: none;
    /*adding some space in between the nav options*/
    padding: 0px 16px;
}

header nav ul li a { /*will style the text link itself that is inside each item on the ul list*/
    font-family: 'Teko', sans-serif;
    font-size: 24px;
    color: #111;
    text-transform: uppercase;
}

header .projects-button {
    /*we don't wanna show the cases link in the header if we are on a mobile device*/
    display: none;
}

/*<HEADER-DESKTOP>*/
/*When the size of the screen be >= 1000px we are going to apply this changes on the code above*/
@media only screen and (min-width: 1000px) {
    header .logo {
        /*to center the logo we need to do a calculation: subtract the logo height(line-height) from the header height and devide the result by 2 that is gonna be the value of the margin top and bottom*/
        margin: 41px 0;
        text-align: left;
        line-height: 38px;
        padding: 0px 20px 0px 40px;
        border-right: 3px solid #111;
        float: left;
    } 
    
    header nav ul {
        /*to center the ul we need to do a calculation: subtract the ul height(a line-height) from the header height and devide the result by 2 that is gonna be the value of the margin top and bottom*/
        margin: 30px 0px 30px 30px;
        float: left;
    }
    
    header nav ul li a { 
        line-height: 60px;
    }

    header .projects-button {
        display: block;
        float: right;
        font-family: 'Teko', sans-serif;
        font-size: 24px;
        color: #111;
        text-transform: uppercase;
        line-height: 40px;
        border: 1px solid #111;
        margin-right: 40px;
        margin-top: 39px;
        padding: 0 20px;
    }
}


/*<MAIN>*/

.banner {
    width: 100%;
    /*height: we want it to be the intire webpage height minus the header height*/
    /*height: 100vh; /*vh: viewheight. So the height of the banner will be 100% of the viewheight of the mobile device*/
    /*but, 100% of the view height will include the space of the header(120px) that is already taken by it.*/
    /*so the banner will get get the viewheight, but the header will push it down because the first 120px it has already taken and we'll have to scroll down to see the rest of the banner*/
    /*we don't want that. We want the banner to taken the left space of the viewheight so we can use calc() to calculate this rest and assign it to the height of the banner*/
    height: calc(100vh - 120px);
    background-image: url(../images/banner5.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;

    display: table;
}

.center-banner-text { /*we're gonna transform the banner display into a table and its text will be table cells. That way, it does not the device's screen the same effect will happen because if we just used margins for example the result could be different in different devices*/
    display: table-cell;
    /*we're vertical aligning the things (text) inside this div to the middle*/
    vertical-align: middle;
}

.banner h2 {
    font-family: 'Teko', sans-serif;
    font-size: 60px;
    color: #fff;
    line-height: 70px;
    font-weight: 900;
    text-align: center;
    text-shadow: 2px 2px 2px #111;
}

.banner h1 {
    font-family: 'Teko', sans-serif;
    font-size: 35px;
    font-weight: 100;
    color: #fff;
    line-height: 40px;
    text-align: center;
    text-shadow: 2px 2px 3px #111;
}


.links div {
    margin: 20px;
    /*because we have 10px of margin on left and right*/
    width: calc(100% - 40px);
    height: 100px;
    background-color: #f2f2f2;
}

.links div h3 {
    font-family: 'Teko', sans-serif;
    font-size: 28px;
    font-weight: 600;
    line-height: 100px;
    color: #111;
    text-align: center;
    text-transform: uppercase;
}

/*<MAIN-DESKTOP>*/
/*When the size of the screen be >= 1000px we are going to apply this changes on the code above*/
@media only screen and (min-width: 1000px) {

    .banner {
        height: 400px;
    }

    .wrapper {
        width: 700px;
        margin: 0 auto;
    }

    .links {
        margin-top: 20px;
    }

    .links div {
        margin: 0px 10px 20px 10px;
        /*because we have 10px of margin on left and right*/
        height: 150px;
        background-color: #f2f2f2;
        float: left;
    }

    .squared-box {
        /*this do not take affect because the previous width styling has greater precedence for some reason. to override that we can use !important*/ 
        width: calc(25% - 20px) !important;
    }

    .rectangular-box {
        width: calc(50% - 20px) !important;
    }

    .links div h3 {
        font-size: 28px;
        font-weight: 660;
        line-height: 150px;
    }

}

/*<FOOTER>*/

footer {
    width: calc(100% - 80px);
    /*let's just set a padding and not a height. That way the footer's height will adapt acordding to the things it wraps*/
    padding: 40px 40px;
    background-color: #111;
    /*when we have a box(like footer) and its child are floating inside it sometimes it get confused recognizing 'em. We can hide the overflow to fix this problem*/
    overflow: hidden;
}

footer ul {
    /*fit-content: returns a width that is large enough to fit all contents of the tag that is being styled (in this case the ul tag).*/
    width: fit-content;
    float: left;
    padding-left: 20px;
}

footer ul li {
    display: block;
    list-style: none;
}

footer ul li a {
    font-family: 'Teko', sans-serif;
    font-size: 30px;
    color: #fff;
    line-height: 40px;
}

footer .footer-top-projects {
    display: none;
}

.socialMedia {
    width: 60px;
    float: right;
}

.socialMedia img {
    width: 100%;
    margin-bottom: 10px;
}

/*<FOOTER-DESKTOP>*/
/*When the size of the screen be >= 1000px we are going to apply this changes on the code above*/
@media only screen and (min-width: 1000px) {
    footer .footer-top-projects {
        display: block;
    }

    footer ul li p {
        font-family: 'Teko', sans-serif;
        font-size: 30px;
        color: #fff;
        line-height: 40px;
        text-transform: uppercase;
    }

    footer ul {
        padding-right: 40px;
    }
}