* { 
    /*we're doing this to remove any decoration from the page's text, e.g the line under links*/
    text-decoration: none;
}

/*removes the bullet points from the list itens. bullet points are a default style for unordered lists*/
li { list-style: none; }

/*<HEADER-MOBILE-FIRST>*/
header {
    background-color: #fff;
    width: 100%;
    height: 120px;
    
    /*sets the positioning method for an element. then this element is positioned using top, left, ...*/
    /*static: it's the default value and the element is not positioned in any special way.*/
    /*relative: the element will be positioned relative to its normal(static) position.*/
    /*fixed: the element is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
}

header .logo {
    font-family: 'Teko', sans-serif;
    font-size: 44px;
    font-weight: 600;
    color: #111;
    text-transform: uppercase;
    text-align: center;
    padding: 20px 0;

    /*specifies the display behavior of an element*/
    /*inline: Displays an element as an inline element (like <span>). Any height and width properties will have no effect*/
    /*block: Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width*/
    /*inline-block: Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values*/
    /*none: do not display the element*/
    display: block; 
}

header nav ul { /*will style the ul that is a container for our list of links*/
     
    /*the ul content is already taking 100% of width (inherited from header) so centralizing the li's by adding a margin will not take affect*/
    /*to fix that we can use the value fit-content on the width property to cut the extra width of the ul then we can center the li's using magins*/
    width: fit-content;
    margin: 0 auto;

}

header nav ul li {/*will style the each item on the ul container*/
    
    display: inline-block;  
    
    /*adding some space in between the nav options*/
    padding: 0px 16px;
}

header nav ul li a { /*will style the text link itself that is inside each item on the ul list*/
    font-family: 'Teko', sans-serif;
    font-size: 24px;
    color: #111;
    text-transform: uppercase;
}

header .projects-button {
    /*we don't wanna show the projects button in the header if we are on a mobile device*/
    display: none;
}

/*<HEADER-DESKTOP>*/
/*When the size of the screen be >= 1000px we are going to apply this changes on the code above*/
@media only screen and (min-width: 1000px) {
    header .logo {
        /*to center the logo we need to do a calculation: subtract the logo height(line-height) from the header height and devide the result by 2 that is gonna be the value of the margin top and bottom*/
        margin: 41px 0;
        padding: 0px 20px 0px 40px;
        line-height: 38px;
        border-right: 3px solid #111;
        
        /*left - The element floats to the left of its container
          right - The element floats to the right of its container
          none - The element does not float (will be displayed just where it occurs in the text). This is default
          inherit - The element inherits the float value of its parent*/
        float: left; 
    } 
    
    header nav ul {
        /*to center the ul we need to do a calculation: subtract the ul height(a line-height) from the header height and devide the result by 2 that is gonna be the value of the margin top and bottom*/
        margin: 30px 0px 30px 30px;
        float: left;
    }
    
    header nav ul li a { 
        line-height: 60px;
    }

    header .projects-button {
        display: block; 
        float: right; 

        font-family: 'Teko', sans-serif;
        font-size: 24px;
        color: #111;
        text-transform: uppercase;
        line-height: 40px;
        border: 1px solid #111;
        margin-right: 40px;
        margin-top: 39px;
        padding: 0 20px;
    }
}


/*<INDEX-MAIN>*/

main {
    padding-top: 120px;
}

.banner {
    width: 100%;
    /*height: we want it to be the intire webpage height minus the header height*/
    /*height: 100vh; /*vh: viewheight. So the height of the banner will be 100% of the viewheight of the mobile device*/
    /*but, 100% of the view height will include the space of the header(120px) that is already taken by it.*/
    /*so the banner will get the viewheight, but the header will push it down because the first 120px it has already taken and we'll have to scroll down to see the rest of the banner*/
    /*we don't want that. We want the banner to taken the left space of the viewheight so we can use calc() to calculate this rest and assign it to the height of the banner*/
    
    /*calc() function performs a calculation to be used as the property value.*/
    height: calc(100vh - 120px); 

    /*sets one or more background images for an element.*/
    background-image: url(../images/banner5.jpg);
    /*By default, a background-image is placed at the top-left corner of an element, and repeated both vertically and horizontally if it do not cover all of its container.
      Tip: The background of an element is the total size of the element, including padding and border (but not the margin).
      Tip: Always set a background-color to be used if the image is unavailable.
    */
    background-repeat: no-repeat; /*Do not repeat the image if it doesn't cover all of the container*/
    background-position: center; /*center the image */
    background-size: cover; /*Resize the background image to cover the entire container*/

    display: table; /*the display behaviour will be like the one of a <table> element*/
}

.center-banner-text { /*we're gonna transform the banner display into a table and its text will be table cells. That way, it does not the device's screen the same effect will happen because if we just used margins for example the result could be different in different devices*/
    display: table-cell; /*!!*/
    /*we're vertical aligning the things (text) inside this div to the middle*/
    vertical-align: middle;
}

.banner h2 {
    font-family: 'Teko', sans-serif;
    font-size: 60px;
    color: #fff;
    line-height: 70px;
    text-align: center;
    text-shadow: 2px 2px 2px #111;
}

.banner h1 {
    font-family: 'Teko', sans-serif;
    font-size: 35px;
    font-weight: 100;
    color: #fff;
    line-height: 40px;
    text-align: center;
    text-shadow: 2px 2px 3px #111;
}


.links div {
    margin: 20px;
    /*because we have 10px of margin on left and right*/
    width: calc(100% - 40px);
    height: 100px;
    background-color: #f2f2f2;
}

.links div a h3 {
    font-family: 'Teko', sans-serif;
    font-size: 28px;
    font-weight: 600;
    line-height: 100px;
    color: #111;
    text-align: center;
    text-transform: uppercase;
}

/*<DESKTOP-INDEX-MAIN>*/
/*When the size of the screen be >= 1000px we are going to apply this changes on the code above*/
@media only screen and (min-width: 1000px) {

    .banner {
        height: 400px;
    }

    .wrapper {
        width: 700px;
        margin: 0 auto;
        overflow: hidden;
    }

    .links {
        margin-top: 20px;
        overflow: hidden;
    }

    .links div {
        margin: 0px 10px 20px 10px;
        /*because we have 10px of margin on left and right*/
        height: 150px;
        background-color: #f2f2f2;
        float: left;
    }

    .squared-box {
        /*this do not take affect because the previous width styling has greater precedence for some reason. to override that we can use !important*/ 
        width: calc(25% - 20px) !important;
    }

    .rectangular-box {
        width: calc(50% - 20px) !important;
    }

    .links div a h3 {
        font-size: 28px;
        font-weight: 660;
        line-height: 150px;
    }

}

/*PROJECTS-MAIN*/

.projects-links {
    /*as all the divs inside the section projects links are floating it will not reconize 'em thus it won't have a height. To fix that we hidde the overflow*/
    overflow: hidden; 
}

.projects-links .wrapper h2 {
    font-family: 'Teko', sans-serif;
    font-size: 28px;
    font-weight: 600;
    color: #111;
    text-transform: uppercase;
    text-align: center;
    margin-bottom: 20px;
}

.projects-links .wrapper div {
    /*one way of positioning elements horizontally next to each other. obs: we have other ways of doing that! (flexbox, css grid)*/
    float: left; 
    
    width: 213.33px;
    height: 213.33px;
    margin: 0px 10px 20px 10px;
    background-color: #e3e3e3;
}

.projects-links .wrapper div p {
    font-family: 'Teko', sans-serif;
    font-size: 24px;
    font-weight: 500;
    color: #111;
    letter-spacing: 2px;
    text-align: center;
    line-height: 213.33px;
    text-transform: uppercase;
}

.projects-links .wrapper .contact {
    width: 680px;
    height: 215.33px;
    margin: 0px 10px 20px 10px;
    background-color: #e3e3e3;
}

.projects-links .wrapper .contact p {
    line-height: normal;
    margin-top: 72.5px;
    font-weight: 600;
}

.projects-links .wrapper .contact p + p {
    line-height: normal;
    margin-top: 10px;
    font-size: 18px;
    font-weight: 500;
}


/*Project-MAIN*/
.wrapper .gallery h2 {
    font-family: 'Teko', sans-serif;
    font-size: 38px;
    font-weight: 600;
    color: #111;
    text-transform: uppercase;
    text-align: center;
}

.wrapper .gallery img {
    display: block; 

    width: 683px;
    height: 384px;
    margin: 20px auto;
}

.wrapper .info .description {
    width: 683px;
    margin: 0px 8.5px 20px 8.5px;
}

.wrapper .info .description h3 {
    font-family: 'Teko', sans-serif;
    font-size: 25px;
    font-weight: 600;
    color: #111;
    padding-bottom: 15px;
    text-transform: uppercase;
}

.wrapper .info .description p {
    font-family: 'Teko', sans-serif;
    font-size: 20px;
    color: #111;
    line-height: 25px;

    /*display the the in the p tag in coluns*/
    column-count: 3; /*!!*/
    column-gap: 30px; /*!!*/
}

.wrapper .info .contact {
    float: left; 

    width: 683px;
    height: 215.33px;
    margin: 0px 8.5px 20px 8.5px;
    background-color: #e3e3e3;
}

.wrapper .info .contact p {
    font-family: 'Teko', sans-serif;
    font-size: 24px;
    font-weight: 600;
    color: #111;
    letter-spacing: 2px;
    text-align: center;
    text-transform: uppercase;
    margin-top: 72.5px;
}

.wrapper .info .contact p + p {
    font-family: 'Teko', sans-serif;
    font-size: 18px;
    font-weight: 500;
    color: #111;
    letter-spacing: 2px;
    text-align: center;
    text-transform: uppercase;
    margin-top: 10px;
}

/*<FOOTER>*/

footer {
    width: calc(100% - 40px);
    /*let's just set a padding and not a height. That way the footer's height will adapt acordding to the things it wraps*/
    padding: 20px 20px;
    background-color: #111;
    
    overflow: hidden; 
}

footer ul {
    /*fit-content: returns a width that is large enough to fit all contents of the tag that is being styled (in this case the ul tag).*/
    width: fit-content; 
    float: left;
    padding-left: 20px;
}

footer ul li a {
    font-family: 'Teko', sans-serif;
    font-size: 23px;
    color: #fff;
    line-height: 40px;
}

footer .footer-top-projects {
    display: none;
}

.socialMedia {
    width: 60px;
    float: right;
}

.socialMedia img {
    width: 100%;
    margin-bottom: 10px;
}

/*<FOOTER-DESKTOP>*/
/*When the size of the screen be >= 1000px we are going to apply this changes on the code above*/
@media only screen and (min-width: 1000px) {
    footer .footer-top-projects {
        display: block;
    }

    footer ul li p {
        font-family: 'Teko', sans-serif;
        font-size: 23px;
        color: #fff;
        line-height: 40px;
        text-transform: uppercase;
    }

    footer ul {
        padding-right: 40px;
    }
}